---
- name: Setup stack 
  hosts: localhost 
  connection: local
  gather_facts: no
  tasks:
    - name: Import vpc setup variable
      include_vars: vars/vpc-output_vars

    - name: Import setup variable
      include_vars: vars/stack_setup

    - name: Create ec2 key
      ec2_key:
        name: key_instance
        region: "{{ region }}"
      register: key_out

    - name: Save private key into file login_key.pem
      copy:
        content: "{{ key_out.key.private_key }}"
        dest: "./login_key.pem"
        mode: 0600
      when: key_out.changed

    - name: Create security group  for load balancer
      ec2_group:
        name: elb_sg
        description: Allow port 80 from everywhere and all port within sg
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: elb_out

    - name: Create security group for stack 
      ec2_group:
        name: stack_sg
        description: Allow port 22 from everywhere and all port within sg
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{ elb_out.group_id }}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{ bastion_sg_id }}"
      register: stack_sg_out

    - name: Update security group with its own security group id 
      ec2_group:
        name: stack_sg
        description: Allow port 22 from everywhere and all port withing sg 
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{ stack_sg_out.group_id }}"

    - name: Creating Nginx web01
      ec2:
        key_name: key_instance
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ nginx_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: ansible_project
          Owner: Atdheoo
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: ansible_project
          Owner: Atdheoo
        group_id: "{{ stack_sg_out.group_id }}"
        vpc_subnet_id: "{{ privsub1id }}"
      register: web01_out

    - name: Creating Tomcat app01
      ec2:
        key_name: key_instance
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ tomcat_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: ansible_project
          Owner: Atdheoo
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: ansible_project
          Owner: Atdheoo
        group_id: "{{ stack_sg_out.group_id }}"
        vpc_subnet_id: "{{ privsub1id }}"
      register: app01_out
    
    - name: Creating Memcache mc01
      ec2:
        key_name: key_instance
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ memcache_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: ansible_project
          Owner: Atdheoo
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: ansible_project
          Owner: Atdheoo
        group_id: "{{ stack_sg_out.group_id }}"
        vpc_subnet_id: "{{ privsub1id }}"
      register: mc01_out

    - name: Creating RabbitMQ rmq01
      ec2:
        key_name: key_instance
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ rmq_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: ansible_project
          Owner: Atdheoo
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: ansible_project
          Owner: Atdheoo
        group_id: "{{ stack_sg_out.group_id }}"
        vpc_subnet_id: "{{ privsub1id }}"
      register: rmq01_out

    - name: Creating Mysql db01
      ec2:
        key_name: key_instance
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ mysql_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: ansible_project
          Owner: Atdheoo
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: ansible_project
          Owner: Atdheoo
        group_id: "{{ stack_sg_out.group_id }}"
        vpc_subnet_id: "{{ privsub1id }}"
      register: db01_out

    - debug:
        var: db01_out